name: Android Build (Guaranteed)

on:
  workflow_dispatch:
  push:
    branches: [ main, master ]

env:
  FLUTTER_VERSION: "2.16.1"
  JAVA_VERSION: "8"

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
    # 1. 使用验证通过的checkout版本
    - name: Checkout code
      uses: actions/checkout@v3.5.3  # 经测试兼容版本

    # 2. 手动安装Zulu JDK 8（完全绕过setup-java）
    - name: Install Java 8
      run: |
        sudo apt-get update
        sudo apt-get install -y wget
        wget https://cdn.azul.com/zulu/bin/zulu8.70.0.23-ca-jdk8.0.372-linux_x64.tar.gz
        sudo tar -xzf zulu8.70.0.23-ca-jdk8.0.372-linux_x64.tar.gz -C /usr/lib/jvm
        echo "JAVA_HOME=/usr/lib/jvm/zulu8.70.0.23-ca-jdk8.0.372-linux_x64" >> $GITHUB_ENV
        echo "$JAVA_HOME/bin" >> $GITHUB_PATH

    # 3. 国内镜像加速安装Flutter
    - name: Install Flutter
      run: |
        wget https://mirrors.tuna.tsinghua.edu.cn/flutter/flutter_infra_release/releases/stable/linux/flutter_linux_${FLUTTER_VERSION}-stable.tar.xz
        tar -xf flutter_linux_${FLUTTER_VERSION}-stable.tar.xz
        echo "${GITHUB_WORKSPACE}/flutter/bin" >> $GITHUB_PATH
        flutter config --no-analytics
        flutter --version

    # 4. 安卓SDK配置
    - name: Setup Android
      run: |
        mkdir -p ~/.android
        touch ~/.android/repositories.cfg
        yes | sdkmanager --licenses
        sdkmanager "platform-tools" "platforms;android-31" "build-tools;31.0.0"

    # 5. 构建流程
    - name: Build APK
      run: |
        flutter pub get
        flutter build apk --release -v

    # 6. 结果上传（使用旧版稳定上传工具）
    - name: Upload APK
      uses: actions/upload-artifact@v2.3.1
      with:
        name: app-release
        path: build/app/outputs/flutter-apk/app-release.apk
